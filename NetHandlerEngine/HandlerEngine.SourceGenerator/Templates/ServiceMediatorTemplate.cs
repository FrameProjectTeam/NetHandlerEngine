// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace HandlerEngine.SourceGenerator.Templates
{
    using HandlerEngine.SourceGenerator.CollectableData;
    using Microsoft.CodeAnalysis;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class ServiceMediatorTemplate : ServiceMediatorTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("using System;\r\nusing System.Buffers.Binary;\r\nusing System.Collections.Generic;\r\nusing System.Threading.Tasks;\r\n\r\nusing HandlerEngine;\r\nusing HandlerEngine.Interfaces;\r\nusing HandlerEngine.Serialization;\r\n\r\n");
            
            #line 13 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

    if(Info.HasNamespace)
    {

            
            #line default
            #line hidden
            this.Write("namespace ");
            
            #line 17 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Info.Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n");
            
            #line 19 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

        PushIndent("\t");
    }

            
            #line default
            #line hidden
            this.Write("public abstract class ");
            
            #line 23 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Info.ServiceName));
            
            #line default
            #line hidden
            this.Write("Mediator : I");
            
            #line 23 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Info.ServiceName));
            
            #line default
            #line hidden
            this.Write(", INetworkService\r\n{\r\n    public string ServiceName => \"");
            
            #line 25 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Info.ServiceName));
            
            #line default
            #line hidden
            this.Write("\";\r\n    public byte ServiceId { get; private set; }\r\n    public INetRecipient Recipient { get; private set; }\r\n\r\n    public bool IsDisposed { get; private set; }\r\n\r\n    private readonly RequestResponseDelegateAsync[] _requestAsyncHandlers;\r\n    private readonly HandlerDelegateAsync[] _rpcAsyncHandlers;\r\n\r\n    protected ");
            
            #line 34 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Info.ServiceName));
            
            #line default
            #line hidden
            this.Write("Mediator()\r\n    { \r\n");
            
            #line 36 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

    MethodInfo[] requestMethods = Info.MethodInfos.Where(mi => !mi.IsRpc()).ToArray();

    if(requestMethods.Length == 0)
    {

            
            #line default
            #line hidden
            this.Write("        _requestAsyncHandlers = Array.Empty<RequestResponseDelegateAsync>();\r\n        \r\n");
            
            #line 44 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

    }
    else
    {

            
            #line default
            #line hidden
            this.Write("        _requestAsyncHandlers = new RequestResponseDelegateAsync[]\r\n        {\r\n");
            
            #line 51 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

        foreach(MethodInfo mi in requestMethods)
        {

            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 55 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.Name));
            
            #line default
            #line hidden
            this.Write("_0x");
            
            #line 55 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.CallAttributeInfo.CallId.ToString("X2")));
            
            #line default
            #line hidden
            this.Write(",\r\n");
            
            #line 56 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("        };\r\n");
            
            #line 60 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

    }
    
    MethodInfo[] rpcMethods = Info.MethodInfos.Where(mi => mi.IsRpc()).ToArray();
    if(rpcMethods.Length == 0)
    {

            
            #line default
            #line hidden
            this.Write("\r\n        _rpcAsyncHandlers = Array.Empty<HandlerDelegateAsync>();\r\n");
            
            #line 69 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

    }
    else
    {

            
            #line default
            #line hidden
            this.Write("\r\n        _rpcAsyncHandlers = new HandlerDelegateAsync[]\r\n        {\r\n");
            
            #line 77 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

        foreach(MethodInfo mi in rpcMethods)
        {

            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 81 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.Name));
            
            #line default
            #line hidden
            this.Write("_0x");
            
            #line 81 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.CallAttributeInfo.CallId.ToString("X2")));
            
            #line default
            #line hidden
            this.Write(",\r\n");
            
            #line 82 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("        };\r\n");
            
            #line 86 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

    }

            
            #line default
            #line hidden
            this.Write("    }\r\n\r\n    void IServiceUnit.Bind(INetRecipient recipient, byte serviceId)\r\n    {\r\n        ServiceId = serviceId;\r\n        Recipient = recipient;\r\n        OnInitialize();\r\n    }\r\n    \r\n    protected virtual void OnInitialize() { }\r\n\r\n    public void Dispose()\r\n    {\r\n        Dispose(true);\r\n        GC.SuppressFinalize(this);\r\n    }\r\n\r\n    protected virtual void Dispose(bool disposing)\r\n    {\r\n        if(IsDisposed)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if(disposing)\r\n        {\r\n            OnDispose();\r\n        }\r\n        OnDisposeUnmanaged();\r\n        IsDisposed = true;\r\n    }\r\n\r\n    protected virtual void OnDispose() { }\r\n\r\n    protected virtual void OnDisposeUnmanaged() { }\r\n\r\n    IEnumerable<ServiceActionDescription> IReceiverServiceUnit.Actions()\r\n    {\r\n");
            
            #line 127 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

    if(Info.MethodInfos.Length == 0)
    {

            
            #line default
            #line hidden
            this.Write("        yield break;\r\n");
            
            #line 132 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

    }
    else
    {
        var rpcIdx = 0;
        var requestIdx = 0;
        for(var i = 0; i < Info.MethodInfos.Length; ++i)
        {
            MethodInfo action = Info.MethodInfos[i];

            
            #line default
            #line hidden
            this.Write("        yield return new ServiceActionDescription(0x");
            
            #line 142 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.CallAttributeInfo.CallId.ToString("X2")));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 142 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.IsRpc() ? rpcIdx++ : requestIdx++));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 142 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(!action.IsRpc() ? "true" : "false"));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 143 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

        }
    }

            
            #line default
            #line hidden
            this.Write("    }\r\n\r\n    public Task HandleRpcAsync(byte actionIdx, OperationCode operationCode, ref ReadOnlySpan<byte> data)\r\n    {\r\n        return _rpcAsyncHandlers[actionIdx].Invoke(operationCode, ref data);\r\n    }\r\n\r\n    public Task HandleRequestAsync(byte actionIdx, OperationCode operationCode, short requestNumber, ref ReadOnlySpan<byte> data)\r\n    {\r\n        return _requestAsyncHandlers[actionIdx].Invoke(operationCode, requestNumber, ref data);\r\n    }\r\n\r\n");
            
            #line 159 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

    for(var i = 0; i < Info.MethodInfos.Length; ++i)
    {
        MethodInfo mi = Info.MethodInfos[i];
        if(i > 0)
        {
            WriteLine(string.Empty);
        }

        bool isRpc = mi.IsRpc();
        bool isVoid = mi.ReturnType.Equals("void");
        bool isTask = mi.IsTask;

            
            #line default
            #line hidden
            this.Write("    private Task ");
            
            #line 172 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.Name));
            
            #line default
            #line hidden
            this.Write("_0x");
            
            #line 172 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.CallAttributeInfo.CallId.ToString("X2")));
            
            #line default
            #line hidden
            this.Write("(OperationCode __opCode, ");
            
            #line 172 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(isRpc ? string.Empty : "short __requestNumber, "));
            
            #line default
            #line hidden
            this.Write("ref ReadOnlySpan<byte> __data)\r\n    {\r\n");
            
            #line 174 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

        foreach(MethodArgumentInfo mai in mi.Parameters)
        {
            if(mai.Specifier == RefKind.Out)
            {

            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 180 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mai.Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 180 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mai.Name));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 181 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

            }
            else
            {

            
            #line default
            #line hidden
            this.Write("        var ");
            
            #line 186 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mai.Name));
            
            #line default
            #line hidden
            this.Write(" = HandlerEngineSerializer.Deserializer.Read<");
            
            #line 186 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mai.Type));
            
            #line default
            #line hidden
            this.Write(">(ref __data);\r\n");
            
            #line 187 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

            }
        }

        if(!isVoid && !isTask)
        {

            
            #line default
            #line hidden
            this.Write("        var __result = ");
            
            #line 194 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 194 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.Parameters.Inline(true, false)));
            
            #line default
            #line hidden
            this.Write(");     \r\n");
            
            #line 195 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

        }
        else
        {

            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 200 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(isTask ? "var __task = " : string.Empty));
            
            #line default
            #line hidden
            
            #line 200 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 200 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.Parameters.Inline(true, false)));
            
            #line default
            #line hidden
            this.Write(");  \r\n");
            
            #line 201 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

        }

        if(isRpc)
        {

            
            #line default
            #line hidden
            this.Write("        return ");
            
            #line 207 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.IsTask ? "__task" : "Task.CompletedTask"));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 208 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

        }
        else
        {
            if(isTask)
            {

            
            #line default
            #line hidden
            this.Write("        return __task.ContinueWith(__completedTask => \r\n        {\r\n");
            
            #line 217 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

                PushIndent("\t");
            }

            
            #line default
            #line hidden
            this.Write("        NetworkBufferWriter __buffer = WriterBufferPool.Buffer;\r\n                \r\n        BinaryPrimitives.WriteUInt16LittleEndian(__buffer.GetSpan(sizeof(ushort)), __opCode.OpCode);\r\n\t\t__buffer.Advance(sizeof(ushort));\r\n        var __responseNumber = (short)(~__requestNumber + 1);\r\n        BinaryPrimitives.WriteInt16LittleEndian(__buffer.GetSpan(sizeof(short)), __responseNumber);\r\n\t\t__buffer.Advance(sizeof(short));\r\n\r\n");
            
            #line 229 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

            if(!isVoid)
            {

            
            #line default
            #line hidden
            this.Write("        HandlerEngineSerializer.Serializer.Write(ref __buffer, ");
            
            #line 233 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(isTask ? "__completedTask.Result" : "__result"));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 234 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

            }

            foreach(MethodArgumentInfo mai in mi.Parameters)
            {
                if(mai.Specifier == RefKind.Out)
                {

            
            #line default
            #line hidden
            this.Write("        HandlerEngineSerializer.Serializer.Write(ref __buffer, ");
            
            #line 242 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mai.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 243 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

                }
            }

            
            #line default
            #line hidden
            this.Write("        Recipient!.Send(__buffer, ");
            
            #line 247 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.CallAttributeInfo.ChannelType.InlineChanelType()));
            
            #line default
            #line hidden
            this.Write(",  ");
            
            #line 247 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.CallAttributeInfo.ChannelId.ToString()));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 248 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

            if(isTask)
            {
                PopIndent();

            
            #line default
            #line hidden
            this.Write("        });\r\n");
            
            #line 254 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

            }
            else
            {

            
            #line default
            #line hidden
            this.Write("        return Task.CompletedTask;\r\n");
            
            #line 260 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

            }
        }

            
            #line default
            #line hidden
            this.Write("    }\r\n\r\n");
            
            #line 266 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

        if(!isVoid && !isTask)
        {

            
            #line default
            #line hidden
            this.Write("    public abstract ");
            
            #line 270 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.ReturnType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 270 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 270 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.Parameters.Inline(true)));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 271 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

        }
        else
        {

            
            #line default
            #line hidden
            this.Write("    public abstract ");
            
            #line 276 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.IsTask ? "Task" : "void"));
            
            #line default
            #line hidden
            
            #line 276 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(isVoid ? string.Empty : $"<{mi.ReturnType}>"));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 276 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 276 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.Parameters.Inline(true)));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 277 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

        }
    }

            
            #line default
            #line hidden
            this.Write("}\r\n");
            
            #line 282 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

    if(Info.HasNamespace)
    {
        PopIndent();

            
            #line default
            #line hidden
            this.Write("}\r\n");
            
            #line 288 "E:\Projects\Unity\FrameProject\NetHandlerEngine\NetHandlerEngine\HandlerEngine.SourceGenerator\Templates\ServiceMediatorTemplate.tt"

    }

            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class ServiceMediatorTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
